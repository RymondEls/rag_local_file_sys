import streamlit as st
from api_utils import get_api_response

def display_chat_interface():
    # Chat container
    chat_container = st.container(border=True)
    
    with chat_container:
        for message in st.session_state.messages:
            avatar = "üßë" if message["role"] == "user" else "ü§ñ"
            with st.chat_message(message["role"], avatar=avatar):
                st.markdown(message["content"])
    
        if prompt := st.chat_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å...", key="chat_input"):
            st.session_state.messages.append({"role": "user", "content": prompt})
            with st.chat_message("user", avatar="üßë"):
                st.markdown(prompt)
            
            with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞..."):
                selected_model = st.session_state.get('selected_model', 'mistralai/mistral-7b-instruct:free')
                response = get_api_response(prompt, st.session_state.session_id, selected_model)
                
                if response:
                    st.session_state.session_id = response.get('session_id')
                    st.session_state.messages.append({"role": "assistant", "content": response['answer']})
                    
                    with st.chat_message("assistant", avatar="ü§ñ"):
                        answer_parts = response['answer'].split("\n\n**–ò—Å—Ç–æ—á–Ω–∏–∫:**")
                        st.markdown(answer_parts[0])
                        if len(answer_parts) > 1:
                            st.info(f"**–ò—Å—Ç–æ—á–Ω–∏–∫:** {answer_parts[1]}")
                        
                        with st.expander("–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞"):
                            st.subheader("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
                            st.code(response['answer'])
                            st.subheader("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å")
                            st.code(response['model'])
                            st.subheader("ID —Å–µ—Å—Å–∏–∏")
                            st.code(response['session_id'])
                else:
                    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")